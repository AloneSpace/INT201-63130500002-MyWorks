//* ‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏ó‡∏µ‡πà 2 = ‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏™‡∏£‡πâ‡∏≤‡∏á Function reduce()
/**
 * ‡πÄ‡∏õ‡πá‡∏ô Function ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏ú‡∏•‡∏£‡∏ß‡∏°‡∏Ç‡∏≠‡∏á‡∏ú‡∏•‡πÑ‡∏°‡πâ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
 * @param {Array} array ‡πÄ‡∏õ‡πá‡∏ô Array ‡∏Ç‡∏≠‡∏á‡∏ú‡∏•‡πÑ‡∏°‡πâ
 * @returns {number} ‡∏ú‡∏•‡∏£‡∏ß‡∏°‡∏Ç‡∏≠‡∏á‡πÑ‡∏°‡πâ‡∏ú‡∏•‡πÑ‡∏°‡πâ‡∏ó‡∏±‡πâ‡∏á
 */
function sum_fruit(array = []) {
    /**
     * reduce = ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏ú‡∏•‡∏£‡∏ß‡∏°‡∏Ç‡∏≠‡∏á Array
     * @param {number} prev ‡∏ú‡∏•‡∏£‡∏ß‡∏°‡∏Ç‡∏≠‡∏á‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏Å‡πà‡∏≠‡∏ô‡∏´‡∏ô‡πâ‡∏≤
     * @param {object} fruit element ‡∏Ç‡∏≠‡∏á Array ‡∏ì ‡∏ó‡∏µ‡πà‡∏ô‡∏µ‡πà‡∏Ñ‡∏∑‡∏≠ Object
     * @param {number} currentIndex ‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î‡∏ó‡∏µ‡πà‡∏Å‡∏≥‡∏•‡∏±‡∏á execute
     * @param {Array<any>} array Array ‡∏Ç‡∏≠‡∏á Parrent
     * @returns {number} ‡∏ú‡∏•‡∏£‡∏ß‡∏°‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
     */
    return array.reduce((prev, fruit, currentIndex, array) => {
        console.table(array);
        console.log(`CurrentIndex: ${currentIndex}`);
        console.log();
        return prev + fruit.qty;
    }, 0);
}

//* ‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏ó‡∏µ‡πà 3 = ‡∏Å‡∏≤‡∏£ Pass Array ‡πÅ‡∏•‡∏∞‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô Function sum_fruit
let s10_have_fruit = [
    { name: "ü•≠", qty: 5 },
    { name: "ü••", qty: 2 },
    { name: "üçì", qty: 3 },
]; //* ‡∏Å‡∏≥‡∏ô‡∏´‡∏î‡πÉ‡∏´‡πâ s10_have_fruit ‡πÄ‡∏õ‡πá‡∏ô Array Object ‡∏ó‡∏µ‡πà‡∏°‡∏±‡∏ú‡∏•‡πÑ‡∏°‡πâ

//* ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡πÉ‡∏ä‡πâ Function sum_fruit()
let sum_total_fruits = sum_fruit(s10_have_fruit);
console.log("================================");
console.log(`Sum: ${sum_total_fruits}`); //* Output: 10
